{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/control-center/cc-frontend/apps/control-center/src/form-components/FormMultiCheckbox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormLabel, Typography } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport axios from 'axios';\nimport url_backend from '../configs/url'; // component for multicheckbox\n\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const FormInputMultiCheckbox = ({\n  name,\n  control,\n  setValue,\n  label,\n  list: _list = []\n}) => {\n  _s();\n\n  const [data, setData] = React.useState({}); // label data passed\n\n  const request_url = url_backend + '/api/labels/';\n\n  const getAPIData = async () => {\n    try {\n      const data = await axios.get(request_url);\n      setData(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getAPIData();\n  }, []);\n  let temp = String(data[0]);\n  temp = temp.slice(1, -2);\n  const options_list = temp.split(',');\n  const options = options_list == null ? void 0 : options_list.map(function (e) {\n    return {\n      label: e,\n      value: e\n    };\n  });\n  const [selectedItems, setSelectedItems] = useState(_list);\n\n  const handleSelect = value => {\n    if (selectedItems !== undefined) {\n      const isPresent = selectedItems.indexOf(value);\n\n      if (isPresent !== -1) {\n        const remaining = selectedItems.filter(item => item !== value);\n        setSelectedItems(remaining);\n      } else {\n        setSelectedItems(prevItems => [...prevItems, value]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setValue(name, selectedItems);\n  }, [selectedItems]);\n  return _jsxDEV(FormControl, {\n    size: 'small',\n    variant: 'outlined',\n    children: [_jsxDEV(FormLabel, {\n      component: \"legend\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      children: options == null ? void 0 : options.map(option => {\n        return _jsxDEV(FormControlLabel, {\n          control: _jsxDEV(Controller, {\n            name: name,\n            render: () => {\n              return _jsxDEV(Checkbox, {\n                checked: selectedItems == null ? void 0 : selectedItems.includes(option.value),\n                onChange: () => handleSelect(option.value),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this);\n            },\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this),\n          label: _jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\" \", option.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 22\n          }, this)\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInputMultiCheckbox, \"Sq5ZZHvUjV4fBjUB5D42xX7abWg=\");\n\n_c = FormInputMultiCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInputMultiCheckbox\");","map":{"version":3,"names":["React","useEffect","useState","Checkbox","FormControl","FormControlLabel","FormLabel","Typography","Controller","axios","url_backend","FormInputMultiCheckbox","name","control","setValue","label","list","data","setData","request_url","getAPIData","get","e","console","log","temp","String","slice","options_list","split","options","map","value","selectedItems","setSelectedItems","handleSelect","undefined","isPresent","indexOf","remaining","filter","item","prevItems","option","includes"],"sources":["/home/sakthi/control-center/cc-frontend/apps/control-center/src/form-components/FormMultiCheckbox.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Typography,\n} from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { FormInputProps } from './FormInputProps';\nimport axios from 'axios';\nimport url_backend from '../configs/url';\n\n// component for multicheckbox\nexport const FormInputMultiCheckbox: React.FC<FormInputProps> = ({\n  name,\n  control,\n  setValue,\n  label,\n  list = [],\n}) => {\n  const [data, setData] = React.useState<Record<string, unknown>>({});\n\n  // label data passed\n  const request_url = url_backend + '/api/labels/';\n\n  const getAPIData = async () => {\n    try {\n      const data = await axios.get<Record<string, unknown>>(request_url);\n\n      setData(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getAPIData();\n  }, []);\n\n  let temp = String(data[0]);\n  temp = temp.slice(1, -2);\n\n  const options_list = temp.split(',');\n\n  const options = options_list?.map(function (e) {\n    return { label: e, value: e };\n  });\n\n  \n  const [selectedItems, setSelectedItems] = useState<string[]>(list);\n\n  const handleSelect = (value: string) => {\n    if (selectedItems !== undefined) {\n      const isPresent = selectedItems.indexOf(value);\n      if (isPresent !== -1) {\n        const remaining = selectedItems.filter((item) => item !== value);\n        setSelectedItems(remaining);\n      } else {\n        setSelectedItems((prevItems) => [...prevItems, value]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setValue(name, selectedItems);\n  }, [selectedItems]);\n\n  return (\n    <FormControl size={'small'} variant={'outlined'}>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n\n      <div>\n        {options?.map((option) => {\n          return (\n            <FormControlLabel\n              control={\n                <Controller\n                  name={name}\n                  render={() => {\n                    return (\n                      <Checkbox\n                        checked={selectedItems?.includes(option.value)}\n                        onChange={() => handleSelect(option.value)}\n                        size=\"small\"\n                      />\n                    );\n                  }}\n                  control={control}\n                />\n              }\n              label={<Typography variant=\"body2\"> {option.label}</Typography>}\n              key={option.value}\n            />\n          );\n        })}\n      </div>\n    </FormControl>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}