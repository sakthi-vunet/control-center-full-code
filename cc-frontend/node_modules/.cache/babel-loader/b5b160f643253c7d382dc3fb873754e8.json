{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/control-center/cc-frontend/apps/control-center/src/utils/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const PrivateRoute = () => {\n  _s();\n\n  // determine if authorized, from context\n  const user = useContext(AuthContext); // If authorized, return an outlet that will render child elements\n  // If not, return element that will navigate to login page\n\n  return user ? _jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }, this) : _jsxDEV(Navigate, {\n    to: \"/app/controlcenter/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 30\n  }, this);\n};\n\n_s(PrivateRoute, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useContext","Navigate","Outlet","AuthContext","PrivateRoute","user"],"sources":["/home/sakthi/control-center/cc-frontend/apps/control-center/src/utils/PrivateRoute.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nimport { AuthContext } from '../context/AuthContext';\n\nexport const PrivateRoute = () => {\n  // determine if authorized, from context\n  const user = useContext(AuthContext);\n\n  // If authorized, return an outlet that will render child elements\n  // If not, return element that will navigate to login page\n  return user ? <Outlet /> : <Navigate to=\"/app/controlcenter/login\" />;\n};\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAChC;EACA,MAAMC,IAAI,GAAGL,UAAU,CAACG,WAAD,CAAvB,CAFgC,CAIhC;EACA;;EACA,OAAOE,IAAI,GAAG,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QAAH,GAAgB,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAA3B;AACD,CAPM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}