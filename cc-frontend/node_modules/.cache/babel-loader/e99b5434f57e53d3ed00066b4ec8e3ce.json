{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /AddHosts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\nimport url_backend from '../configs/url';\nimport { FormInputRadio } from '../form-components/FormInputRadio';\nimport { FormInputText } from '../form-components/FormInputText';\nimport { FormInputMultiCheckbox } from '../form-components/FormMultiCheckbox'; // interface for form data\n\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n// set default values for formdata\nconst defaultValues = {\n  name: '',\n  description: '',\n  Ipaddress: '',\n  host_type: '',\n  labels: [],\n  OS: '',\n  number_of_cores: 0,\n  processor_type: '',\n  memory: '',\n  total_storage: '',\n  storage: '',\n  mount_point: ''\n}; // options for radio button for host type\n\nconst options = [{\n  label: 'Web',\n  value: 'Web'\n}, {\n  label: 'App',\n  value: 'App'\n}, {\n  label: 'DB',\n  value: 'DB'\n}, {\n  label: 'Common',\n  value: 'Common'\n}]; // Add host form\n\nexport const AddHosts = () => {\n  _s();\n\n  // Form hadle components\n  const methods = useForm({\n    defaultValues: defaultValues\n  });\n  const {\n    handleSubmit,\n    reset,\n    control,\n    setValue,\n    watch\n  } = methods; //  submit form data to hosts\n\n  const request_url = url_backend + '/api/hosts/';\n\n  const onSubmit = async data => {\n    console.log(JSON.stringify(data));\n\n    try {\n      // make axios post request\n      const response = await axios({\n        method: 'post',\n        url: request_url,\n        data: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n\n    alert('Host is successfully addded');\n    window.location.reload();\n  };\n\n  return (// add host form\n    _jsxDEV(Paper, {\n      style: {\n        display: 'grid',\n        gridRowGap: '20px',\n        padding: '20px',\n        margin: '10px 300px'\n      },\n      elevation: 3,\n      children: [_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add Host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputText, {\n        name: \"name\",\n        control: control,\n        label: \"Name of the host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputText, {\n        name: \"description\",\n        control: control,\n        label: \"Description of the host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputText, {\n        name: \"Ipaddress\",\n        control: control,\n        label: \"IP Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputText, {\n        name: \"OS\",\n        control: control,\n        label: \"Host OS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputRadio, {\n        name: 'host_type',\n        control: control,\n        label: 'Type of host',\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), _jsxDEV(FormInputMultiCheckbox, {\n        control: control,\n        setValue: setValue,\n        name: 'labels',\n        label: 'Labels'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), _jsxDEV(Box, {\n        component: \"span\",\n        m: 1,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [_jsxDEV(FormInputText, {\n          name: \"number_of_cores\",\n          control: control,\n          label: \"Number of cores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), _jsxDEV(FormInputText, {\n          name: \"memory\",\n          control: control,\n          label: \"Memory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), _jsxDEV(Box, {\n        component: \"span\",\n        m: 1,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [_jsxDEV(FormInputText, {\n          name: \"processor_type\",\n          control: control,\n          label: \"Type of Processor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), _jsxDEV(FormInputText, {\n          name: \"total_storage\",\n          control: control,\n          label: \"Total storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), _jsxDEV(Box, {\n        component: \"span\",\n        m: 1,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [_jsxDEV(FormInputText, {\n          name: \"storage\",\n          control: control,\n          label: \"Mount point storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), _jsxDEV(FormInputText, {\n          name: \"mount_point\",\n          control: control,\n          label: \"Mount point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), _jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        display: \"flex\",\n        children: [_jsxDEV(Button, {\n          onClick: handleSubmit(onSubmit),\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), _jsxDEV(Button, {\n          onClick: () => reset(),\n          variant: \"contained\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddHosts, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c = AddHosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddHosts\");","map":{"version":3,"names":["useForm","Button","Box","Paper","Stack","Typography","axios","url_backend","FormInputRadio","FormInputText","FormInputMultiCheckbox","defaultValues","name","description","Ipaddress","host_type","labels","OS","number_of_cores","processor_type","memory","total_storage","storage","mount_point","options","label","value","AddHosts","methods","handleSubmit","reset","control","setValue","watch","request_url","onSubmit","data","console","log","JSON","stringify","response","method","url","headers","error","alert","window","location","reload","display","gridRowGap","padding","margin"],"sources":["/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /AddHosts.tsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\n\nimport { Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\n\nimport url_backend from '../configs/url';\nimport { FormInputRadio } from '../form-components/FormInputRadio';\nimport { FormInputText } from '../form-components/FormInputText';\nimport { FormInputMultiCheckbox } from '../form-components/FormMultiCheckbox';\n\n// interface for form data\ninterface IFormInput {\n  name: string;\n  description: string;\n  Ipaddress: string;\n  host_type: string;\n  labels: string[];\n  OS: string;\n  number_of_cores: number;\n  processor_type: string;\n  memory: string;\n  total_storage: string;\n  storage: string;\n  mount_point: string;\n}\n// set default values for formdata\nconst defaultValues = {\n  name: '',\n  description: '',\n  Ipaddress: '',\n  host_type: '',\n  labels: [],\n  OS: '',\n  number_of_cores: 0,\n  processor_type: '',\n  memory: '',\n  total_storage: '',\n  storage: '',\n  mount_point: '',\n};\n\n// options for radio button for host type\nconst options = [\n  {\n    label: 'Web',\n    value: 'Web',\n  },\n  {\n    label: 'App',\n    value: 'App',\n  },\n  {\n    label: 'DB',\n    value: 'DB',\n  },\n  {\n    label: 'Common',\n    value: 'Common',\n  },\n];\n\n// Add host form\nexport const AddHosts = () => {\n  // Form hadle components\n  const methods = useForm<IFormInput>({ defaultValues: defaultValues });\n  const { handleSubmit, reset, control, setValue, watch } = methods;\n\n  //  submit form data to hosts\n  const request_url = url_backend + '/api/hosts/';\n  const onSubmit = async (data: IFormInput) => {\n    console.log(JSON.stringify(data));\n    try {\n      // make axios post request\n      const response = await axios({\n        method: 'post',\n        url: request_url,\n        data: JSON.stringify(data),\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n    alert('Host is successfully addded');\n\n    window.location.reload();\n  };\n\n  return (\n    // add host form\n    <Paper\n      style={{\n        display: 'grid',\n        gridRowGap: '20px',\n        padding: '20px',\n        margin: '10px 300px',\n      }}\n      elevation={3}\n    >\n      <Typography variant=\"h6\">Add Host</Typography>\n\n      <FormInputText name=\"name\" control={control} label=\"Name of the host\" />\n      <FormInputText\n        name=\"description\"\n        control={control}\n        label=\"Description of the host\"\n      />\n      <FormInputText name=\"Ipaddress\" control={control} label=\"IP Address\" />\n      <FormInputText name=\"OS\" control={control} label=\"Host OS\" />\n      {/*  */}\n      <FormInputRadio\n        name={'host_type'}\n        control={control}\n        label={'Type of host'}\n        options={options}\n      />\n{/* multi check box to select labels for the hosts */}\n      <FormInputMultiCheckbox\n        control={control}\n        setValue={setValue}\n        name={'labels'}\n        label={'Labels'}\n      />\n\n      <Box\n        component=\"span\"\n        m={1}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <FormInputText\n          name=\"number_of_cores\"\n          control={control}\n          label=\"Number of cores\"\n        />\n        <FormInputText name=\"memory\" control={control} label=\"Memory\" />\n      </Box>\n      <Box\n        component=\"span\"\n        m={1}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <FormInputText\n          name=\"processor_type\"\n          control={control}\n          label=\"Type of Processor\"\n        />\n        <FormInputText\n          name=\"total_storage\"\n          control={control}\n          label=\"Total storage\"\n        />\n      </Box>\n      <Box\n        component=\"span\"\n        m={1}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <FormInputText\n          name=\"storage\"\n          control={control}\n          label=\"Mount point storage\"\n        />\n        <FormInputText\n          name=\"mount_point\"\n          control={control}\n          label=\"Mount point\"\n        />\n      </Box>\n\n      <Stack direction=\"row\" spacing={2} display=\"flex\">\n        {/* submit button */}\n        <Button onClick={handleSubmit(onSubmit)} variant=\"contained\">\n          Submit\n        </Button>\n        {/* reset button */}\n        <Button onClick={() => reset()} variant=\"contained\">\n          Reset\n        </Button>\n      </Stack>\n    </Paper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}