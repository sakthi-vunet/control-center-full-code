{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /Auth_ProtectedPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useAxios from \"../utils/useAxios\"; //  redirected to this page when user tries to access other pages without logging in\n\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const ProtectedPage = () => {\n  _s();\n\n  const [res, setRes] = useState(\"\");\n  const api = useAxios();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get('');\n        setRes(response.data.response);\n      } catch (_unused) {\n        setRes(\"Something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(\"h1\", {\n      children: \"Projected Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), _jsxDEV(\"p\", {\n      children: res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedPage, \"b63Mi4FkeGGoSgdzmI/PvwdNsew=\", false, function () {\n  return [useAxios];\n});\n\n_c = ProtectedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedPage\");","map":{"version":3,"names":["useEffect","useState","useAxios","ProtectedPage","res","setRes","api","fetchData","response","get","data"],"sources":["/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /Auth_ProtectedPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useAxios from \"../utils/useAxios\";\n\n//  redirected to this page when user tries to access other pages without logging in\nexport const ProtectedPage=()=> {\n  const [res, setRes] = useState(\"\");\n  const api = useAxios();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get('');\n        setRes(response.data.response);\n      } catch {\n        setRes(\"Something went wrong\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Projected Page</h1>\n      <p>{res}</p>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;;AACA,OAAO,MAAMC,aAAa,GAAC,MAAK;EAAA;;EAC9B,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAMK,GAAG,GAAGJ,QAAQ,EAApB;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAJ,CAAQ,EAAR,CAAvB;QACAJ,MAAM,CAACG,QAAQ,CAACE,IAAT,CAAcF,QAAf,CAAN;MACD,CAHD,CAGE,gBAAM;QACNH,MAAM,CAAC,sBAAD,CAAN;MACD;IACF,CAPD;;IAQAE,SAAS;EACV,CAVQ,EAUN,EAVM,CAAT;EAYA,OACE;IAAA,WACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEE;MAAA,UAAIH;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAtBM;;GAAMD,a;UAECD,Q;;;KAFDC,a"},"metadata":{},"sourceType":"module"}