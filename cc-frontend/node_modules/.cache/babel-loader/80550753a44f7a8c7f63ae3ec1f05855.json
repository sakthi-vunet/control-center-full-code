{"ast":null,"code":"var _jsxFileName = \"/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /ServicesViewnew.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport axios from 'axios';\nimport url_backend from '../configs/url';\nimport HealthAndSafetyIcon from '@mui/icons-material/HealthAndSafety';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { RotatingLines } from 'react-loader-spinner'; // for accordions style\n\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst Accordion = styled(props => _jsxDEV(MuiAccordion, Object.assign({\n  disableGutters: true,\n  elevation: 0,\n  square: true\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0\n  },\n  '&:before': {\n    display: 'none'\n  }\n})); // for accordion summary style\n\n_c = Accordion;\nconst AccordionSummary = styled(props => _jsxDEV(MuiAccordionSummary, Object.assign({\n  expandIcon: _jsxDEV(ArrowForwardIosSharpIcon, {\n    sx: {\n      fontSize: '0.9rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 17\n  }, this)\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, .05)' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)'\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1)\n  }\n})); // for accordion details style\n\n_c2 = AccordionSummary;\nconst AccordionDetails = styled(MuiAccordionDetails)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)'\n}));\n_c3 = AccordionDetails;\nexport const ServicesView = ({\n  data\n}) => {\n  _s();\n\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  }; // get host data to map current allocation of the particular service\n  // on differenyt hosts\n\n\n  const [hostsdata, sethostsData] = React.useState([]);\n  const request_url = url_backend + '/api/hosts/';\n\n  const getHostsData = async () => {\n    try {\n      const data = await axios.get(request_url);\n      sethostsData(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getHostsData();\n  }, []); // function to map between host name and the number of instances of the\n  //  service running on the host\n\n  const returnInstance = (temp, serviceName) => {\n    let currentInstance = 0;\n    temp.services.forEach(({\n      Name,\n      Instances\n    }) => {\n      if (Name === serviceName) {\n        console.log(Name, Instances);\n        currentInstance = Instances;\n      }\n    });\n    return currentInstance;\n  };\n\n  return _jsxDEV(_Fragment, {\n    children: data.map((row, index) => _jsxDEV(\"div\", {\n      children: [_jsxDEV(Typography, {\n        sx: {\n          flex: '1 1 100%'\n        },\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: [\"Service \", '>>', \" \", row.name, row.state === 'enabled' ? _jsxDEV(Tooltip, {\n          title: \"enabled\",\n          children: _jsxDEV(IconButton, {\n            children: _jsxDEV(HealthAndSafetyIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this) : _jsxDEV(Tooltip, {\n          title: \"disabled\",\n          children: _jsxDEV(IconButton, {\n            children: _jsxDEV(HealthAndSafetyIcon, {\n              color: \"disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), _jsxDEV(\"span\", {\n        style: {\n          marginLeft: '.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), _jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [_jsxDEV(Typography, {\n          children: \"Service Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), _jsxDEV(\"span\", {\n          style: {\n            marginLeft: '.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), _jsxDEV(Paper, {\n          variant: \"outlined\",\n          elevation: 8,\n          children: _jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              paddingTop: '.3rem',\n              paddingBottom: '.3rem',\n              paddingRight: '0.8rem',\n              paddingLeft: '.8rem'\n            },\n            children: row.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), _jsxDEV(\"span\", {\n        style: {\n          marginLeft: '.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), _jsxDEV(Accordion, {\n        expanded: expanded === 'panel1',\n        onChange: handleChange('panel1'),\n        children: [_jsxDEV(AccordionSummary, {\n          \"aria-controls\": \"panel1d-content\",\n          id: \"panel1d-header\",\n          children: _jsxDEV(Typography, {\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), _jsxDEV(AccordionDetails, {\n          children: _jsxDEV(Typography, {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), _jsxDEV(Accordion, {\n        expanded: expanded === 'panel2',\n        onChange: handleChange('panel2'),\n        children: [_jsxDEV(AccordionSummary, {\n          \"aria-controls\": \"panel2d-content\",\n          id: \"panel2d-header\",\n          children: _jsxDEV(Typography, {\n            children: \"Instances and Host Mapping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), _jsxDEV(AccordionDetails, {\n          children: _jsxDEV(Box, {\n            sx: {\n              display: 'flex'\n            },\n            children: [_jsxDEV(Box, {\n              sx: {\n                display: 'inline-block',\n                float: 'left',\n                width: '100px'\n              },\n              children: _jsxDEV(Table, {\n                children: _jsxDEV(TableHead, {\n                  children: _jsxDEV(TableRow, {\n                    children: [_jsxDEV(TableCell, {\n                      children: \"Instances\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this), _jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.actual_instances\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), _jsxDEV(Box, {\n              sx: {\n                display: 'inline-block',\n                marginInline: '250px'\n              },\n              children: [_jsxDEV(Typography, {\n                children: \"Current Allocation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), _jsxDEV(Box, {\n                sx: {\n                  width: '300px'\n                },\n                children: _jsxDEV(Table, {\n                  children: _jsxDEV(TableBody, {\n                    children: hostsdata ? hostsdata.map((tuple, index) => // only hosts that has at least 1 instance of the service running is displayed\n                    returnInstance(tuple, row.name) > 0 ? _jsxDEV(TableRow, {\n                      children: [_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        children: tuple.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 35\n                      }, this), _jsxDEV(TableCell, {\n                        children: returnInstance(tuple, row.name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 35\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 33\n                    }, this) : _jsxDEV(_Fragment, {}, void 0, false)) : // Loading indicator for current allocation\n                    _jsxDEV(RotatingLines, {\n                      strokeColor: \"blue\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), _jsxDEV(Accordion, {\n        expanded: expanded === 'panel3',\n        onChange: handleChange('panel3'),\n        children: [_jsxDEV(AccordionSummary, {\n          \"aria-controls\": \"panel3d-content\",\n          id: \"panel3d-header\",\n          children: _jsxDEV(Typography, {\n            children: \"Labels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), _jsxDEV(AccordionDetails, {\n          children: _jsxDEV(Box, {\n            sx: {\n              width: '300px'\n            },\n            children: _jsxDEV(Table, {\n              children: _jsxDEV(TableBody, {\n                children: row.labels.map(row => _jsxDEV(TableRow, {\n                  children: _jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this)\n                }, row, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(ServicesView, \"FfSnssbkxn6rKB2WFuHxkwXrG1A=\");\n\n_c4 = ServicesView;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Accordion\");\n$RefreshReg$(_c2, \"AccordionSummary\");\n$RefreshReg$(_c3, \"AccordionDetails\");\n$RefreshReg$(_c4, \"ServicesView\");","map":{"version":3,"names":["React","styled","ArrowForwardIosSharpIcon","MuiAccordion","MuiAccordionSummary","MuiAccordionDetails","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","axios","url_backend","HealthAndSafetyIcon","Tooltip","IconButton","Box","RotatingLines","Accordion","props","theme","border","palette","divider","borderBottom","display","AccordionSummary","fontSize","backgroundColor","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","padding","borderTop","ServicesView","data","expanded","setExpanded","useState","handleChange","panel","event","newExpanded","hostsdata","sethostsData","request_url","getHostsData","get","e","console","log","useEffect","returnInstance","temp","serviceName","currentInstance","services","forEach","Name","Instances","map","row","index","flex","name","state","alignItems","paddingTop","paddingBottom","paddingRight","paddingLeft","type","description","float","width","actual_instances","marginInline","tuple","labels"],"sources":["/home/sakthi/control-center/cc-frontend/apps/control-center/src/pages /ServicesViewnew.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { ServiceData } from '../models/ServiceData';\nimport { HostsData } from '../models/HostData';\nimport axios from 'axios';\nimport url_backend from '../configs/url';\nimport HealthAndSafetyIcon from '@mui/icons-material/HealthAndSafety';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { RotatingLines } from 'react-loader-spinner';\n\n// for accordions style\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\n// for accordion summary style\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n// for accordion details style\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nexport const ServicesView: React.FC<{ data: ServiceData[] }> = ({ data }) => {\n  const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n  // get host data to map current allocation of the particular service\n  // on differenyt hosts\n  const [hostsdata, sethostsData] = React.useState<HostsData[]>([]);\n  const request_url = url_backend + '/api/hosts/';\n  const getHostsData = async () => {\n    try {\n      const data = await axios.get<HostsData[]>(request_url);\n\n      sethostsData(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  React.useEffect(() => {\n    getHostsData();\n  }, []);\n\n  // function to map between host name and the number of instances of the\n  //  service running on the host\n  const returnInstance = (temp: HostsData, serviceName: string) => {\n    let currentInstance = 0;\n    temp.services.forEach(({ Name, Instances }) => {\n      if (Name === serviceName) {\n        console.log(Name, Instances);\n        currentInstance = Instances;\n      }\n    });\n    return currentInstance;\n  };\n\n  return (\n    <>\n      {data.map((row, index) => (\n        <div>\n          <Typography\n            sx={{ flex: '1 1 100%' }}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Service {'>>'} {row.name}\n            {/* Icon to indicate whether service is enabled or diabled */}\n            {row.state === 'enabled' ? (\n              <Tooltip title=\"enabled\">\n                <IconButton>\n                  <HealthAndSafetyIcon color=\"success\" />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"disabled\">\n                <IconButton>\n                  <HealthAndSafetyIcon color=\"disabled\" />\n                </IconButton>\n              </Tooltip>\n            )}\n            {/* Service type display */}\n          </Typography>\n          <span style={{ marginLeft: '.5rem' }} />\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography>Service Type</Typography>\n            <span style={{ marginLeft: '.5rem' }} />\n            <Paper variant=\"outlined\" elevation={8}>\n              <Typography\n                variant=\"subtitle1\"\n                sx={{\n                  paddingTop: '.3rem',\n                  paddingBottom: '.3rem',\n                  paddingRight: '0.8rem',\n                  paddingLeft: '.8rem',\n                }}\n              >\n                {row.type}\n              </Typography>\n            </Paper>\n          </Box>\n          <span style={{ marginLeft: '.5rem' }} />\n\n          {/* Basic Information */}\n          <Accordion\n            expanded={expanded === 'panel1'}\n            onChange={handleChange('panel1')}\n          >\n            <AccordionSummary\n              aria-controls=\"panel1d-content\"\n              id=\"panel1d-header\"\n            >\n              <Typography>Basic Information</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>{row.description}</Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          {/* Instances and Host Mapping */}\n          <Accordion\n            expanded={expanded === 'panel2'}\n            onChange={handleChange('panel2')}\n          >\n            <AccordionSummary\n              aria-controls=\"panel2d-content\"\n              id=\"panel2d-header\"\n            >\n              <Typography>Instances and Host Mapping</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Box sx={{ display: 'flex' }}>\n                {/* No. of instances of service running on swarm */}\n                <Box\n                  sx={{\n                    display: 'inline-block',\n                    float: 'left',\n                    width: '100px',\n                  }}\n                >\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Instances</TableCell>\n                        <TableCell align=\"right\">\n                          {row.actual_instances}\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                  </Table>\n                </Box>\n\n                {/* Instances of services on each host */}\n                <Box sx={{ display: 'inline-block', marginInline: '250px' }}>\n                  <Typography>Current Allocation</Typography>\n                  {\n                    <Box sx={{ width: '300px' }}>\n                      <Table>\n                        <TableBody>\n                          {hostsdata ? (\n                            hostsdata.map((tuple, index) =>\n                              // only hosts that has at least 1 instance of the service running is displayed\n                              returnInstance(tuple, row.name) > 0 ? (\n                                <TableRow key={index}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {tuple.name}\n                                  </TableCell>\n                                  <TableCell>\n                                    {returnInstance(tuple, row.name)}\n                                  </TableCell>\n                                </TableRow>\n                              ) : (\n                                <></>\n                              )\n                            )\n                          ) : (\n                            // Loading indicator for current allocation\n                            <RotatingLines strokeColor=\"blue\" />\n                          )}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                  }\n                </Box>\n              </Box>\n            </AccordionDetails>\n          </Accordion>\n\n          {/* Labels associated with the service from db */}\n          <Accordion\n            expanded={expanded === 'panel3'}\n            onChange={handleChange('panel3')}\n          >\n            <AccordionSummary\n              aria-controls=\"panel3d-content\"\n              id=\"panel3d-header\"\n            >\n              <Typography>Labels</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Box sx={{ width: '300px' }}>\n                <Table>\n                  <TableBody>\n                    {row.labels.map((row) => (\n                      <TableRow key={row}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      ))}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}