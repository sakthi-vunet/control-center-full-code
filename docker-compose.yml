version: "3.9"

services:

# mysql database
  db:

  # loading the initial dump 
    volumes:
      - ./db_dump:/docker-entrypoint-initdb.d
    container_name: mysql_container_cc

    image: mysql:8.0.17
  # mysql pwd and database
    environment:
      MYSQL_ROOT_PASSWORD: helloworld
      MYSQL_DATABASE: testapp

    ports:
      - "3307:3306"

    networks:
      - cc-backend-app

# Django Backend
  web:
    build: 
      # context: .
    
    # build file
      context: .
      dockerfile: Dockerfile_backend
    command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - ./cc-backend:/code
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/ping:/usr/bin/ping
      - /usr/bin/telnet:/usr/bin/telnet
      - /usr/bin/ssh-keygen:/usr/bin/ssh-keygen
      - /usr/bin/ssh:/usr/bin/ssh
    ports:
      - "8000:8000"
    environment:
      MYSQL_ROOT_PASSWORD: helloworld
      MYSQL_DATABASE: testapp

    container_name: cc-django
    hostname: www.controlcenter.com
    networks:
      - cc-backend-app
    depends_on:
      - db
# Web terminal container for container login feature
  web-tty:
    image: wrfly/container-web-tty:latest
    ports:
      - 8080:8080
    environment:
      - WEB_TTY_DEBUG=false
      - DOCKER_HOST=/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/ssh:/bin/ssh
      - /usr/bin/ping:/usr/bin/ping
      - /usr/bin/telnet:/usr/bin/telnet
    depends_on:
      - web
      - db
    networks:
      - cc-backend-app

# Front end react application
  front-end:
    build:
      context: .
      

      dockerfile: Dockerfile_frontend
    volumes:
      - ./cc-frontend:/react-ui
    ports:
      - "4200:4200"
    networks:
      - cc-backend-app
    container_name: cc-react-app
    depends_on:
      - db
      - web
    
networks:
  cc-backend-app:
    driver: bridge

volumes:
  cc-backend-app:
    driver: local
